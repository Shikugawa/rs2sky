# This is a basic workflow to help you get started with Actions

name: rs2sky test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install Rust
        run: |
          git submodule update --init --recursive
          rustup toolchain install stable --component clippy --component rustfmt
      - name: Format
        run: cargo fmt -- --check
      - name: clippy
        run: cargo clippy

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - name: Prepare service container
      #   run: 
      - name: Run e2e
        run: |
          docker-compose -f docker-compose.e2e.yml up -d --build
          pip3 install --upgrade pip
          pip3 install setuptools
          pip3 install -r requirements.txt
          timeout -s TERM 300 bash -c \
          'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8081)" == "000" ]]; do sleep 5; done'
          timeout -s TERM 300 bash -c \
          'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:12800)" == "000" ]]; do sleep 5; done'
          python3 tests/e2e/run_e2e.py --expected_file=tests/e2e/data/expected_context.yaml --max_retry_times=3 --target_path=/ping
